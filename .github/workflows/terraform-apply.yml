name: Terraform Apply

on:
  push:
    branches:
      - development
  workflow_dispatch:
    inputs:
      environment:
        description: "Ambiente (dev, test, prod)"
        required: true
        default: "dev"

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: |
        ENVIRONMENT="${{ github.event.inputs.environment }}"
        if [ -z "$ENVIRONMENT" ]; then
          ENVIRONMENT="dev"
        fi

        echo "Usando ambiente: $ENVIRONMENT"
        
        if [ ! -f "environments/${ENVIRONMENT}.tfvars" ]; then
          echo "Error: El archivo environments/${ENVIRONMENT}.tfvars no existe"
          exit 1
        fi

        terraform apply -auto-approve -var-file="environments/${ENVIRONMENT}.tfvars"

    - name: Obtener IP pública
      id: get-ip
      run: |
        echo "Obteniendo la IP pública de la instancia EC2..."
        IP=$(terraform output -raw ec2_public_ip 2>/dev/null || echo "")
        
        if [ -z "$IP" ]; then
          echo "❌ ERROR: No se pudo obtener la IP pública de la EC2"
          exit 1
        fi

        echo "✅ IP pública obtenida: $IP"
        echo "EC2_HOST=$IP" >> $GITHUB_ENV

    - name: Deploy vía SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.EC2_HOST }}
        username: ubuntu 
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/app
          git pull origin main
          docker-compose up -d --build

